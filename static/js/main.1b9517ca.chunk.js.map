{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","pages/ProfilePage.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/logInForm.js","pages/LogInPage.js","components/Auth/signUpForm.js","pages/SignUpPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","idToken","passChanged","AuthContext","React","createContext","token","isLoggedIn","login","logout","passError","emailError","authErrorsHandler","message","passChanging","changePasswordHandler","clearErrors","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","setPassError","setEmailError","isError","setPassChanging","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","includes","replaceAll","changed","Provider","value","children","MainNavigation","navigate","useNavigate","authCtx","useContext","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","changingPass","form","method","action","control","htmlFor","type","id","name","error","UserProfile","profile","ProfilePage","actionData","useActionData","navigation","useNavigation","expiresIn","toISOString","errors","state","request","formData","inputData","fetch","body","JSON","stringify","password","get","returnSecureToken","headers","res","ok","json","LogInForm","auth","required","actions","isLoading","toggle","LogInPage","email","data","SignUpForm","onClickHandler","SignUpPage","redirect","StartingPageContent","starting","HomePage","App","router","createHashRouter","element","path","logInAction","signUpAction","newPassAction","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1b9517ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__nH_qX\",\"error\":\"ProfileForm_error__2iRa5\",\"changed\":\"ProfileForm_changed__39Hz7\",\"control\":\"ProfileForm_control__2M6Wf\",\"action\":\"ProfileForm_action__28kbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1I2cR\",\"logo\":\"MainNavigation_logo__3zZe7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3KFH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__iWUVG\"};","import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n  passError: \"\",\n  emailError: \"\",\n  authErrorsHandler: (message) => {},\n  passChanging: {},\n  changePasswordHandler: (message, cganged = true) => {},\n  clearErrors: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  if (remainingTime <= 0) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const [passError, setPassError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passChanging, setPassChanging] = useState({\n    isError: false,\n    message: \"\",\n  });\n\n  const userIsLoggedIn = !!token;\n\n  const authErrorsHandler = (message) => {\n    if (message.includes(\"PASSWORD\")) {\n      setPassError(message.replaceAll(\"_\", \" \"));\n      setEmailError(\"\");\n    } else if (message.includes(\"EMAIL\")) {\n      setEmailError(message.replaceAll(\"_\", \" \"));\n      setPassError(\"\");\n    }\n  };\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPassError(\"\");\n    setPassChanging({\n      isError: false,\n      message: \"\",\n    });\n  };\n  const changePasswordHandler = (message, changed = false) => {\n    if (changed) {\n      setToken(message.idToken);\n      localStorage.setItem(\"token\", message.idToken);\n      localStorage.setItem(\"expirationTime\", message.expirationTime);\n      setPassChanging({\n        isError: false,\n        message: \"Changed Successfully\",\n      });\n    } else {\n      setPassChanging({\n        isError: true,\n        message: message.replaceAll(\"_\", \" \"),\n      });\n    }\n  };\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    setPassChanging({\n      isError: false,\n      message: \"Changed Successfully\",\n    });\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n    clearErrors();\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    passError,\n    emailError,\n    authErrorsHandler,\n    passChanging,\n    changePasswordHandler,\n    clearErrors,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useActionData, useNavigation } from \"react-router-dom\";\nimport UserProfile from \"../components/Profile/UserProfile\";\nimport AuthContext from \"../store/auth-context\";\nimport { useContext } from \"react\";\nlet idToken;\nlet passChanged;\n\nconst ProfilePage = () => {\n  const authCtx = useContext(AuthContext);\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  idToken = authCtx.token;\n  if (actionData && !actionData.isError) {\n    setTimeout(() => {\n      const expirationTime = new Date(\n        new Date().getTime() + +actionData.message.expiresIn * 1000\n      );\n      authCtx.changePasswordHandler(\n        {\n          idToken: actionData.message.idToken,\n          expirationTime: expirationTime.toISOString(),\n        },\n        true\n      );\n      passChanged = true;\n    }, 0);\n  }\n  if (actionData && actionData.isError) {\n    setTimeout(() => {\n      authCtx.changePasswordHandler(actionData.message.error.errors[0].message);\n      passChanged = false;\n    }, 0);\n  }\n  return (\n    <UserProfile\n      passChanged={passChanged}\n      changingPass={navigation.state === \"submitting\"}\n    />\n  );\n};\n\nexport default ProfilePage;\nexport async function action({ request }) {\n  const inputData = await request.formData();\n  const res = await fetch(\n    \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAZThACu5VNBs-7nmH9cnQQKAVvYSYaDms\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken,\n        password: inputData.get(\"password\"),\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (!res.ok) {\n    return { isError: true, message: await res.json() };\n  }\n  return { isError: false, message: await res.json() };\n}\n","import { useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const navigate = useNavigate();\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    navigate(\"/Home\", { replace: true });\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = () => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{<Outlet />}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Form } from \"react-router-dom\";\nimport classes from \"./ProfileForm.module.css\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nconst ProfileForm = ({ changingPass }) => {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Form className={classes.form} method=\"POST\" action=\"/profile\">\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" name=\"password\" />\n        {authCtx.passChanging.isError && (\n          <p className={classes.error}>{authCtx.passChanging.message}</p>\n        )}\n        {!authCtx.passChanging.isError && authCtx.passChanging.message && (\n          <p className={classes.changed}>{authCtx.passChanging.message}</p>\n        )}\n      </div>\n      <div className={classes.action}>\n        {!changingPass && <button>Change Password</button>}\n        {changingPass && <p>Changing password...</p>}\n      </div>\n    </Form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from \"./ProfileForm\";\nimport classes from \"./UserProfile.module.css\";\n\nconst UserProfile = (props) => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm\n        passChanged={props.passChanged}\n        changingPass={props.changingPass}\n      />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { Form, Link } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useContext } from \"react\";\n\nconst LogInForm = (props) => {\n  const authCtx = useContext(AuthContext);\n  const onClickHandler = () => {\n    authCtx.clearErrors();\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>Log in</h1>\n      <Form method=\"POST\" action=\"/login\" data-testid=\"loginform\">\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required name=\"email\" />\n          {authCtx.emailError && (\n            <p className={classes.error}>{authCtx.emailError}</p>\n          )}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required name=\"password\" />\n          {authCtx.passError && (\n            <p className={classes.error}>{authCtx.passError}</p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!props.isLoading && <button>Log in</button>}\n          {props.isLoading && <p>Logging in...</p>}\n          <Link\n            className={classes.toggle}\n            to={\"/signup\"}\n            onClick={onClickHandler}\n          >\n            Create New Account\n          </Link>\n        </div>\n      </Form>\n    </section>\n  );\n};\nexport default LogInForm;\n","import { useContext } from \"react\";\nimport { useActionData, useNavigate, useNavigation } from \"react-router-dom\";\nimport LogInForm from \"../components/Auth/logInForm\";\nimport AuthContext from \"../store/auth-context\";\nconst LogInPage = () => {\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const authCtx = useContext(AuthContext);\n  const actionData = useActionData();\n  if (actionData && !actionData.isError && actionData.idToken) {\n    setTimeout(() => {\n      authCtx.login(\n        actionData.idToken,\n        actionData.expirationTime.toISOString()\n      );\n      navigate(\"/profile\");\n    }, 0);\n  }\n  if (actionData && actionData.isError) {\n    setTimeout(() => {\n      authCtx.authErrorsHandler(actionData.message.error.errors[0].message);\n    }, 0);\n  }\n  return <LogInForm isLoading={navigation.state === \"submitting\"} />;\n};\nexport default LogInPage;\nexport async function action({ request }) {\n  const inputData = await request.formData();\n  const res = await fetch(\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAZThACu5VNBs-7nmH9cnQQKAVvYSYaDms\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: inputData.get(\"email\"),\n        password: inputData.get(\"password\"),\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (!res.ok) {\n    return { isError: true, message: await res.json() };\n  }\n  const data = await res.json();\n  const expirationTime = new Date(\n    new Date().getTime() + +data.expiresIn * 1000\n  );\n  return { isError: false, expirationTime, idToken: data.idToken };\n}\n","import classes from \"./AuthForm.module.css\";\r\nimport { Link, Form } from \"react-router-dom\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { useContext } from \"react\";\r\nconst SignUpForm = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const onClickHandler = () => {\r\n    authCtx.clearErrors();\r\n  };\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>Sign Up</h1>\r\n      <Form method=\"POST\" action=\"/signup\">\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required name=\"email\" />\r\n          {authCtx.emailError && (\r\n            <p className={classes.error}>{authCtx.emailError}</p>\r\n          )}\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" required name=\"password\" />\r\n          {authCtx.passError && (\r\n            <p className={classes.error}>{authCtx.passError}</p>\r\n          )}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          {!props.isLoading && (\r\n            <button onClick={onClickHandler}>Create Account</button>\r\n          )}\r\n          {props.isLoading && <p>Signing Up...</p>}\r\n          <Link\r\n            className={classes.toggle}\r\n            to={\"/login\"}\r\n            onClick={onClickHandler}\r\n          >\r\n            Login with existing account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </section>\r\n  );\r\n};\r\nexport default SignUpForm;\r\n","import SignUpForm from \"../components/Auth/signUpForm\";\r\nimport { redirect, useActionData, useNavigation } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../store/auth-context\";\r\nconst SignUpPage = () => {\r\n  const navigation = useNavigation();\r\n  const authCtx = useContext(AuthContext);\r\n  const actionData = useActionData();\r\n  if (actionData && actionData.isError) {\r\n    setTimeout(() => {\r\n      authCtx.authErrorsHandler(actionData.message.error.errors[0].message);\r\n    }, 0);\r\n  }\r\n\r\n  return <SignUpForm isLoading={navigation.state === \"submitting\"} />;\r\n};\r\nexport default SignUpPage;\r\nexport async function action({ request }) {\r\n  const inputData = await request.formData();\r\n  const res = await fetch(\r\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAZThACu5VNBs-7nmH9cnQQKAVvYSYaDms\",\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: inputData.get(\"email\"),\r\n        password: inputData.get(\"password\"),\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const message = await res.json();\r\n    return { isError: true, message };\r\n  }\r\n  return redirect(\"/login\");\r\n}\r\n","import classes from \"./StartingPageContent.module.css\";\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n      <h2>please log in to see your profile</h2>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Navigate, RouterProvider, createHashRouter } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport LogInPage from \"./pages/LogInPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\nimport { action as signUpAction } from \"./pages/SignUpPage\";\nimport { action as logInAction } from \"./pages/LogInPage\";\nimport { action as newPassAction } from \"./pages/ProfilePage\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <RouterProvider\n      router={createHashRouter([\n        {\n          element: <Layout />,\n          children: [\n            { path: \"/\", element: <Navigate replace to={\"/Home\"} /> },\n            {\n              path: \"/Home\",\n              element: !authCtx.isLoggedIn ? (\n                <HomePage />\n              ) : (\n                <Navigate replace to=\"/profile\" />\n              ),\n            },\n            {\n              path: \"/login\",\n              element: !authCtx.isLoggedIn ? (\n                <LogInPage />\n              ) : (\n                <Navigate replace to=\"/profile\" />\n              ),\n              action: logInAction,\n            },\n            {\n              path: \"/signup\",\n              element: !authCtx.isLoggedIn ? (\n                <SignUpPage />\n              ) : (\n                <Navigate replace to=\"/profile\" />\n              ),\n              action: signUpAction,\n            },\n            {\n              path: \"/profile\",\n              element: authCtx.isLoggedIn ? (\n                <ProfilePage />\n              ) : (\n                <Navigate replace to=\"/\" />\n              ),\n              action: newPassAction,\n            },\n            { path: \"*\", element: <Navigate replace to={\"/\"} /> },\n          ],\n        },\n      ])}\n    />\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__11Aky\",\"error\":\"AuthForm_error__2olA8\",\"control\":\"AuthForm_control__28m2k\",\"actions\":\"AuthForm_actions__29RnI\",\"toggle\":\"AuthForm_toggle__2GVfb\"};"],"sourceRoot":""}